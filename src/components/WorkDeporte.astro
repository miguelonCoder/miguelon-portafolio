---
import Card from "./Card.astro";
import "../styles/works.css";
---

<div
  id="container-deporte"
  class="container base-container deporte-container animated"
>
  <Card
    title="Sistema de Gestión de Escenarios Deportivos (2023-2024)"
    body="Diseño de la arquitectura del software e implementación del Sistema de Gestión de los Escenarios Deportivos de la Ciudad de Cali. Esta aplicación se desarrolló con un sistema de permisos granular basada en roles personalizables, aplicando una combinación entre las estrategias RBAC y ABAC."
    hrefString="Ver geoportal"
    href="http://sider.cali.gov.co:8083/"
    skills={[
      { name: "Postgres", link: "https://www.postgresql.org/" },
      { name: "Nestjs", link: "https://www.javascript.com/" },
      { name: "Angular", link: "https://www.python.org/" },
      { name: "Docker", link: "https://developers.google.com/apps-script" },
    ]}
  />
  <div id="scroll-indicator" class="scroll-indicator animated">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="icon animated-icon"
      viewBox="0 0 48.21 48.21"
    >
      <defs> </defs>
      <g id="Capa_2" data-name="Capa 2">
        <g id="Capa_1-2" data-name="Capa 1">
          <path
            class="cls-1"
            d="M24.1,46A22.06,22.06,0,0,1,3.51,31.49,22.13,22.13,0,0,1,10.08,7.28,22,22,0,0,1,35.14,5.19,22.09,22.09,0,0,1,45.62,28.08,22.12,22.12,0,0,1,24.1,46a1.13,1.13,0,0,0,0,2.25A24.41,24.41,0,0,0,46.86,32.09,24.13,24.13,0,0,0,11.64,3.42,24.38,24.38,0,0,0,.45,28.85,24.36,24.36,0,0,0,24.1,48.21,1.13,1.13,0,0,0,24.1,46Z"
          ></path>
          <path
            class="cls-1"
            d="M23,9V39a1.13,1.13,0,0,0,2.25,0V9A1.13,1.13,0,0,0,23,9Z"></path>
          <path
            class="cls-1"
            d="M38.43,23.28,25.2,36.52l-1.89,1.89H24.9L11.66,25.17,9.77,23.28a1.13,1.13,0,0,0-1.59,1.6L21.42,38.11,23.31,40a1.14,1.14,0,0,0,1.59,0L38.13,26.76,40,24.88a1.13,1.13,0,0,0-1.59-1.6Z"
          ></path>
        </g>
      </g>
    </svg>
  </div>
</div>

<script>
  import * as maptalks from "maptalks";
  import { slide, titleSlide, sharedMap } from "../store.js";
  import {
    ANIMATION_DURATION,
    DEFAULT_GEOMETRY_COLOR,
    SlideNumber,
  } from "../constants";
  import { clearMap, ArrayPlusDelay } from "../utilities";

  import { properties } from "../geodata/properties";

  document.addEventListener("DOMContentLoaded", function (event) {
    const container = document.getElementById("container-deporte");
    sharedMap.subscribe((map) => {
      slide.subscribe((_slide) => {
        if (_slide === SlideNumber.Deporte) {
          updateMap();
          titleSlide.set("Experiencia");
          container!.style.display = "flex";
        } else {
          container!.style.display = "none";
        }
      });

      function updateMap() {
        addGeometry();
        map.animateTo(
          {
            zoom: 17,
            center: [-76.532626, 3.460315],
            pitch: 20,
            bearing: 60,
          },
          {
            duration: ANIMATION_DURATION,
            easing: "out",
          }
        );
        clearMap(map, "deportes");
      }

      function addGeometry() {
        const propertiesLayer = new maptalks.VectorLayer("deportes");
        propertiesLayer.addTo(map);
        const geometries = maptalks.GeoJSON.toGeometry(
          properties,
          (geometry) => {
            geometry
              .setSymbol({
                lineColor: "#000",
                lineWidth: 0,
                polygonFill: DEFAULT_GEOMETRY_COLOR,
                polygonOpacity: 0.0,
              })
              .on("mouseenter", (e) =>
                e.target.updateSymbol({ polygonOpacity: 0.9 })
              )
              .on("mouseout", (e) =>
                e.target.updateSymbol({ polygonOpacity: 0.3 })
              )
              .addTo(propertiesLayer);
          }
        );
        ArrayPlusDelay(
          geometries,
          function (g: maptalks.Geometry) {
            g.updateSymbol({ polygonOpacity: 0.6 });
          },
          20
        );
      }
    });
  });
</script>
